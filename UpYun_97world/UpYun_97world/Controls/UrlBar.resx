<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnUpFolder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD+AP4A/usY1IIAAAAJdnBBZwAAABAAAAAQAFzGrcMAAAAuelRYdGNyZWF0ZS1kYXRl
        AAB42jMyMLDQNbDQNTIJMTCwMjKzMjTTNTC1MjAAAEICBRYSrbfkAAAALnpUWHRtb2RpZnktZGF0ZQAA
        eNozMjCw0DWw0DUyCDE0tTIxtjKw0DUwtTIwAABCDwUYAL+G3AAAA3tJREFUOE9lU/9vE2UcfrPsHyiJ
        P5tNBX4gyvyBQIskmphIUClsCd9WVJQ4Q4wJSjRZwFG+ajq3YVoVnVtl30i2ZEoEFeaOUlZc126s7dZ1
        K2u53vXb9e567bXd5Hh8r474g5/kyb3v5/M8z/tc7l7ypJbDSyTgnalVMqIxlxMcEf5ByBsLSN7YrLTA
        RUOZdNohJFJGz7i7ds4/u6aiZdy6lYhpgaTinEEURet4dDL58VgHXhn8AA29lir09fFbX2Fs0ZNMpVLW
        6FzEwMVY8tS6dYQkOZ5k2JQhI2adXVMD2qbe/aj/cS82XTmAhoFmbKbQ19UenXVO9muJZMKpmywtRAiZ
        +MNVk5dla5dvQKvrMePFoYN4acSCV0ffwqX7V3DW2033zdVeA53pnA5vv5amSa7+0FdDKlLRxMS9/AtD
        +7Bj5CD2XGuG5YYFffN9qDyqoLhahs3XjcZrh2Cms+2U8/zgftyKevgsmzIRRVHsbffa8fKIGYd/a8ax
        scMYjvyE8qMSnlR+RUWH/zLe/v0QLJSzY9iMkx4b0um0ncRzbLD1zhGcYPbiOPMOfl7qpyeX16T/lW5y
        aeZ7vH/Tgk+YRnzqehcRPhok4UxYOu1uhMNnxvVoL1ZobO3xYyznOaxqq9RsFTGFq5ooKyV0TTtg++tN
        nLrThNnErEQWs2HpvKcJ3/l24sbi5yj9LcPD+9AbdFCzEsRKAe1THXiYD0CqKPjab6Vf4jWcnWhCiA9I
        JClzwU7vUdgmtuCcaz2c94/gjPt1DAY/oglKVKSi1dWCb6beoCmPovXPjbB5tqB98j3EMg+CpKiq9uFw
        F04xG3Dm9jOwMvU4zTyNbv8emqBQNTgxfgBttGdl6qqck+MbcHWuE4KQs5OysmJaFAL8lxO7qLCeEp6l
        z7r/Gfwr1mf1uHB3F+ZT07yQzJnI9L2ZGlUtWT3sL9pF9/ZqAp387dRO+t5+RMRpfMbsrvZ08XnKuRsf
        1fTffnRotIZIOYlIgmwoqIrTz1/XHN5GetJGiufwhbsBFynamPWw0p6dzrzcr5oo55zsMmtIsAlCjrW0
        kKKiEjErGUo0CScvJF3xHgwGPsRl374qBuj6dqwHrDifzMt5a4JePCGTI6Zt29auJK00nyWx6MNaVSkb
        qZFDLgqhrMJKOqRCNlQoFB2yoBiDM6Ha5aX4moqQfwCkxc42ab5t8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>